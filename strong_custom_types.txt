Even though the Distance and Area types above are just Float s, the compiler does not allow arbitrary mixing of values of these different types. An explicit conversion (which does not necessarily mean any additional object code) is necessary. The predefined Ada rules are not perfect; they admit some problematic cases (for example multiplying two Distance s yields a Distance ) and prohibit some useful cases (for example multiplying two Distance s should deliver an Area ). These situations can be handled through other mechanisms. A predefined operation can be identified as abstract to make it unavailable; overloading can be used to give new interpretations to existing operator symbols, for example al- lowing an operator to return a value from a type different from its operands; and more generally, GNAT has introduced a facility that helps perform dimensionality checking
